

provider "aws"{                                    // before we have to configure or establish the connection between local cmd to aws( we need to install aws cli)
    region="eu-north-1"
}

resource "aws_vpc" "my_vpc"{
    cidr_block="15.0.0.0/16"                    // here we are assigning the ip address to vpc , so we use cidr_block variable.
    
     tags={
        Name="MY_vpc_by_terraform"              // this is code is used to give the name to vpc.
      
}
}

resource "aws_subnet" "subnet" {                     //this block is create the subnet
    vpc.id = aws_vpc.main.id                        // this is vpc is required to create subnet
    cidr_block = "15.0.0.255/17"                    // assigning the ip address to subnet
    Availibility_zone = "us-east-1"                 // here we are chosing the Availibility_zone
    tags={
        Name="subnet_by_terraform"                  // giving a name to subnet
      
}    
}

resource "aws_internet_gateway" "igw"{               // this code is create the internetgate way
vpc_id = aws_vpc.vpc_main.id                        // basically, we need to attacg the igw to vpc . so we are using vpc_id to establish the connection.
tags = {

Name = "internet_gateway_by_terraform"              // giving the name to internet gate way
}
}

resource "aws_route_table" "route"{                //this code is create the route tabel same as gui. while creating route table we have to select the vpc .thats why we use vpc id for creating route_table.
vpc_id = aws_vpc.vpc_main.id
route {                                           // this will add cidr to table or adding values to the table.  adding the internetgate to route _table . to make the subnet private
cidr_block="0.0.0.0/0"
gateway_id= "aws_internet_gateway.igw.id
}
tags = {
  Name = "route_table_by_terraform"
}
}
resource " aws_route_table_association" "subnet_association"{        // aws_route_table_association means adding the subnet to route table 
subnet_id = aws_subnet.subnet.id                                    // this will show that subnet.
route_table = aws_route_table.route.id
}


provider "aws_instance" "ec2" {                                          // this code is  to create the ec2-instance using terraform code
ami = "ami-00f34bf9aeacdf007"                                           // we have to choose the ami so get the ami id for aws (goto Choose an Amazon Machine Image (AMI) )
instance_type ="t2.micro"                                              //choosing the instance type
subnet_id = aws_subnet.subnet.id                                      // here , selecting subnet for hosting ec2-instance(public_subnet).we are using subnet id form the vpc
key_name = "private_key_1"                                           // this code is used to give keypair name. We can use the kepair while login to ec2-instance.
security_groups = ["default"]                                       //securitygroup :here we are giving default security group.
associate_public_ip_address = true                                 // this code is used to enable the public address. same as gui

tags = {
Name = "ec2_by_terraform"
}

root_block_device{                                          // this is used to attach the ebs-volume to the ec2-instance. note gp2 nothing but ssd.
volume_size= 16                                             // here we have to give  size of EBS_volume 
volume_type= "gp2"                                         // this code defines the volume_type . type of storages for example :SSD, HHD.
delete_on_termination = true                               // this code will delete ebs volume during termination of ec2 instance.
}
}
user_data = file("scripts.sh")                       // user_data: this is used to install software during ec2 instance lanching. frist we have to create the file that should the what package or softare need to install during instance lanching .for example, jenkins,docker.




  
 





