pipeline
{
    parameters
    {
        choice( name: 'terraformAction', choices:['apply','destroy'], description:'choose any terraformAction')
    }
    environment
    {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
    agent any
    stages
    {
        stage('git-checkout')
        {
            steps
            {
              git branch:'terraform-project-1',url:'https://github.com/MYPROJECTS555/terraform_project.git'
            }
            
        }
        stage('plan')
        {
        steps
              {
              sh '''
              pwd                                    
              cd project-realtime/                 
              terraform init                       
              terraform plan -out=tfplan          
              terraform show -no-color tfplan > tfplan.txt
              '''
             }

        }
        stage ('approval')
        {
          steps
            {
                script 
                {
                   def plan = readFile 'project-realtime/tfplan.txt'
                   input message : "do you want to proceed with terraform action"
                   parameters: [text(name: 'plan',description:'please review the plan', defaultValue:plan)]
                }

            }

        }
        stage('apply-or-destroy') {
            when {
                expression {
                    return params.terraformaction == 'apply' || params.terraformaction == 'destroy'
                }
            }
            steps {
                script {
                    if (params.terraformaction == 'apply') 
                       {
                        echo "Running terraform apply..."
                        sh '''
                        cd project-realtime/ && \\
                        terraform apply -input=false tfplan
                        '''
                         } 
                    else if (params.terraformaction == 'destroy') 
                        {
                        echo "Running terraform destroy..."
                        sh '''
                        cd project-realtime/ && \\
                        terraform destroy -auto-approve
                        '''
                         }
                }
            }
        }

    
    
    }
    
}
